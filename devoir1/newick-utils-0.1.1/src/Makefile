# Makefile.in generated by automake 1.10 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/newick-utils
pkglibdir = $(libdir)/newick-utils
pkgincludedir = $(includedir)/newick-utils
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = nw_indent$(EXEEXT) nw_display$(EXEEXT) \
	nw_clade$(EXEEXT) nw_reroot$(EXEEXT) nw_rename$(EXEEXT) \
	nw_condense$(EXEEXT) nw_support$(EXEEXT) nw_ed$(EXEEXT) \
	nw_topology$(EXEEXT) nw_distance$(EXEEXT) nw_labels$(EXEEXT) \
	nw_prune$(EXEEXT) nw_order$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	address_parser.c address_parser.h address_scanner.c \
	indent_lex.c newick_parser.c newick_parser.h newick_scanner.c
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am__objects_1 =
am__objects_2 = newick_parser.$(OBJEXT) newick_scanner.$(OBJEXT) \
	rnode.$(OBJEXT) list.$(OBJEXT) parser.$(OBJEXT) link.$(OBJEXT) \
	tree.$(OBJEXT) redge.$(OBJEXT) nodemap.$(OBJEXT) \
	hash.$(OBJEXT) $(am__objects_1)
am__objects_3 = to_newick.$(OBJEXT) concat.$(OBJEXT)
am_nw_clade_OBJECTS = $(am__objects_2) $(am__objects_3) \
	subtree.$(OBJEXT) lca.$(OBJEXT) rnode_iterator.$(OBJEXT)
nw_clade_OBJECTS = $(am_nw_clade_OBJECTS)
nw_clade_DEPENDENCIES =
am_nw_condense_OBJECTS = $(am__objects_2) $(am__objects_3) \
	condense.$(OBJEXT)
nw_condense_OBJECTS = $(am_nw_condense_OBJECTS)
nw_condense_DEPENDENCIES =
am_nw_display_OBJECTS = $(am__objects_2) display.$(OBJEXT) \
	canvas.$(OBJEXT) text_graph.$(OBJEXT) \
	simple_node_pos.$(OBJEXT) svg_graph.$(OBJEXT) \
	readline.$(OBJEXT) lca.$(OBJEXT) node_pos_alloc.$(OBJEXT)
nw_display_OBJECTS = $(am_nw_display_OBJECTS)
nw_display_DEPENDENCIES =
am_nw_distance_OBJECTS = $(am__objects_2) distance.$(OBJEXT) \
	simple_node_pos.$(OBJEXT) lca.$(OBJEXT) \
	node_pos_alloc.$(OBJEXT)
nw_distance_OBJECTS = $(am_nw_distance_OBJECTS)
nw_distance_DEPENDENCIES =
am_nw_ed_OBJECTS = $(am__objects_2) $(am__objects_3) \
	address_scanner.$(OBJEXT) address_parser.$(OBJEXT) \
	tree_editor.$(OBJEXT) enode.$(OBJEXT)
nw_ed_OBJECTS = $(am_nw_ed_OBJECTS)
nw_ed_DEPENDENCIES =
am_nw_indent_OBJECTS = indent.$(OBJEXT) indent_lex.$(OBJEXT)
nw_indent_OBJECTS = $(am_nw_indent_OBJECTS)
nw_indent_DEPENDENCIES =
am_nw_labels_OBJECTS = $(am__objects_2) labels.$(OBJEXT)
nw_labels_OBJECTS = $(am_nw_labels_OBJECTS)
nw_labels_DEPENDENCIES =
am_nw_order_OBJECTS = $(am__objects_2) $(am__objects_3) \
	order.$(OBJEXT)
nw_order_OBJECTS = $(am_nw_order_OBJECTS)
nw_order_DEPENDENCIES =
am_nw_prune_OBJECTS = $(am__objects_2) $(am__objects_3) \
	prune.$(OBJEXT)
nw_prune_OBJECTS = $(am_nw_prune_OBJECTS)
nw_prune_DEPENDENCIES =
am_nw_rename_OBJECTS = $(am__objects_2) $(am__objects_3) \
	rename.$(OBJEXT) readline.$(OBJEXT)
nw_rename_OBJECTS = $(am_nw_rename_OBJECTS)
nw_rename_DEPENDENCIES =
am_nw_reroot_OBJECTS = $(am__objects_2) $(am__objects_3) \
	reroot.$(OBJEXT) lca.$(OBJEXT)
nw_reroot_OBJECTS = $(am_nw_reroot_OBJECTS)
nw_reroot_DEPENDENCIES =
am_nw_support_OBJECTS = $(am__objects_2) $(am__objects_3) \
	support.$(OBJEXT) node_set.$(OBJEXT)
nw_support_OBJECTS = $(am_nw_support_OBJECTS)
nw_support_DEPENDENCIES =
am_nw_topology_OBJECTS = $(am__objects_2) $(am__objects_3) \
	topology.$(OBJEXT)
nw_topology_OBJECTS = $(am_nw_topology_OBJECTS)
nw_topology_DEPENDENCIES =
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
LEXCOMPILE = $(LEX) $(LFLAGS) $(AM_LFLAGS)
YLWRAP = $(top_srcdir)/ylwrap
YACCCOMPILE = $(YACC) $(YFLAGS) $(AM_YFLAGS)
SOURCES = $(nw_clade_SOURCES) $(nw_condense_SOURCES) \
	$(nw_display_SOURCES) $(nw_distance_SOURCES) $(nw_ed_SOURCES) \
	$(nw_indent_SOURCES) $(nw_labels_SOURCES) $(nw_order_SOURCES) \
	$(nw_prune_SOURCES) $(nw_rename_SOURCES) $(nw_reroot_SOURCES) \
	$(nw_support_SOURCES) $(nw_topology_SOURCES)
DIST_SOURCES = $(nw_clade_SOURCES) $(nw_condense_SOURCES) \
	$(nw_display_SOURCES) $(nw_distance_SOURCES) $(nw_ed_SOURCES) \
	$(nw_indent_SOURCES) $(nw_labels_SOURCES) $(nw_order_SOURCES) \
	$(nw_prune_SOURCES) $(nw_rename_SOURCES) $(nw_reroot_SOURCES) \
	$(nw_support_SOURCES) $(nw_topology_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/guillaume/Documents/uqam/INF4500/INF4500/devoir1/newick-utils-0.1.1/missing --run aclocal-1.10
ALLOCA = 
AMTAR = ${SHELL} /home/guillaume/Documents/uqam/INF4500/INF4500/devoir1/newick-utils-0.1.1/missing --run tar
AUTOCONF = ${SHELL} /home/guillaume/Documents/uqam/INF4500/INF4500/devoir1/newick-utils-0.1.1/missing --run autoconf
AUTOHEADER = ${SHELL} /home/guillaume/Documents/uqam/INF4500/INF4500/devoir1/newick-utils-0.1.1/missing --run autoheader
AUTOMAKE = ${SHELL} /home/guillaume/Documents/uqam/INF4500/INF4500/devoir1/newick-utils-0.1.1/missing --run automake-1.10
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LEX = ${SHELL} /home/guillaume/Documents/uqam/INF4500/INF4500/devoir1/newick-utils-0.1.1/missing --run flex
LEXLIB = 
LEX_OUTPUT_ROOT = 
LIBOBJS = 
LIBS = -lm 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/guillaume/Documents/uqam/INF4500/INF4500/devoir1/newick-utils-0.1.1/missing --run makeinfo
MKDIR_P = /usr/bin/mkdir -p
OBJEXT = o
PACKAGE = newick-utils
PACKAGE_BUGREPORT = thomas.junier@medecine.unige.ch
PACKAGE_NAME = Newick Utils
PACKAGE_STRING = Newick Utils 0.1.1
PACKAGE_TARNAME = newick-utils
PACKAGE_VERSION = 0.1.1
PATH_SEPARATOR = :
POW_LIB = 
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 0.1.1
YACC = yacc
YFLAGS = 
abs_builddir = /home/guillaume/Documents/uqam/INF4500/INF4500/devoir1/newick-utils-0.1.1/src
abs_srcdir = /home/guillaume/Documents/uqam/INF4500/INF4500/devoir1/newick-utils-0.1.1/src
abs_top_builddir = /home/guillaume/Documents/uqam/INF4500/INF4500/devoir1/newick-utils-0.1.1
abs_top_srcdir = /home/guillaume/Documents/uqam/INF4500/INF4500/devoir1/newick-utils-0.1.1
ac_ct_CC = gcc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/guillaume/Documents/uqam/INF4500/INF4500/devoir1/newick-utils-0.1.1/install-sh
libdir = ${exec_prefix}/lib64
libexecdir = ${exec_prefix}/lib
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /usr/bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = ..
top_srcdir = ..
BUILT_SOURCES = newick_parser.h newick_scanner.c newick_parser.c \
		address_scanner.c address_parser.c

HDR = canvas.h concat.h enode.h hash.h lca.h link.h list.h nodemap.h \
	node_pos_alloc.h node_set.h parser.h readline.h redge.h rnode.h \
	rnode_iterator.h simple_node_pos.h svg_graph.h text_graph.h \
	to_newick.h tree.h tree_editor_rnode_data.h common.h

nw_indent_SOURCES = indent.c indent_lex.l
nw_indent_LDADD = 

# I mention all headers here, so they're included in the distro (otherwise this
# is not necessary, it builds just fine)
NW_CORE = newick_parser.y newick_scanner.l rnode.c list.c parser.c \
	  link.c tree.c redge.c nodemap.c hash.c $(HDR)

NW_OUT = to_newick.c concat.c
AM_YFLAGS = -d
nw_display_SOURCES = $(NW_CORE) display.c canvas.c text_graph.c \
		simple_node_pos.c svg_graph.c readline.c lca.c \
		node_pos_alloc.c

nw_display_LDADD = 
nw_clade_SOURCES = $(NW_CORE) $(NW_OUT) subtree.c lca.c rnode_iterator.c
nw_clade_LDADD =  
nw_reroot_SOURCES = $(NW_CORE) $(NW_OUT) reroot.c lca.c
nw_reroot_LDADD = 
nw_rename_SOURCES = $(NW_CORE) $(NW_OUT) rename.c readline.c
nw_rename_LDADD = 
nw_condense_SOURCES = $(NW_CORE) $(NW_OUT) condense.c
nw_condense_LDADD = 
nw_support_SOURCES = $(NW_CORE) $(NW_OUT) support.c node_set.c
nw_support_LDADD = 
nw_ed_SOURCES = $(NW_CORE) $(NW_OUT) address_scanner.l address_parser.y \
	tree_editor.c enode.c

nw_ed_LDADD =  -lm
nw_topology_SOURCES = $(NW_CORE) $(NW_OUT) topology.c
nw_topology_LDADD = 
nw_distance_SOURCES = $(NW_CORE) distance.c simple_node_pos.c lca.c \
		      node_pos_alloc.c

nw_distance_LDADD = 
nw_labels_SOURCES = $(NW_CORE) labels.c 
nw_labels_LDADD = 
nw_prune_SOURCES = $(NW_CORE) $(NW_OUT) prune.c 
nw_prune_LDADD = 
nw_order_SOURCES = $(NW_CORE) $(NW_OUT) order.c
nw_order_LDADD = 
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .l .o .obj .y
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
newick_parser.h: newick_parser.c
	@if test ! -f $@; then \
	  rm -f newick_parser.c; \
	  $(MAKE) $(AM_MAKEFLAGS) newick_parser.c; \
	else :; fi
nw_clade$(EXEEXT): $(nw_clade_OBJECTS) $(nw_clade_DEPENDENCIES) 
	@rm -f nw_clade$(EXEEXT)
	$(LINK) $(nw_clade_OBJECTS) $(nw_clade_LDADD) $(LIBS)
nw_condense$(EXEEXT): $(nw_condense_OBJECTS) $(nw_condense_DEPENDENCIES) 
	@rm -f nw_condense$(EXEEXT)
	$(LINK) $(nw_condense_OBJECTS) $(nw_condense_LDADD) $(LIBS)
nw_display$(EXEEXT): $(nw_display_OBJECTS) $(nw_display_DEPENDENCIES) 
	@rm -f nw_display$(EXEEXT)
	$(LINK) $(nw_display_OBJECTS) $(nw_display_LDADD) $(LIBS)
nw_distance$(EXEEXT): $(nw_distance_OBJECTS) $(nw_distance_DEPENDENCIES) 
	@rm -f nw_distance$(EXEEXT)
	$(LINK) $(nw_distance_OBJECTS) $(nw_distance_LDADD) $(LIBS)
address_parser.h: address_parser.c
	@if test ! -f $@; then \
	  rm -f address_parser.c; \
	  $(MAKE) $(AM_MAKEFLAGS) address_parser.c; \
	else :; fi
nw_ed$(EXEEXT): $(nw_ed_OBJECTS) $(nw_ed_DEPENDENCIES) 
	@rm -f nw_ed$(EXEEXT)
	$(LINK) $(nw_ed_OBJECTS) $(nw_ed_LDADD) $(LIBS)
nw_indent$(EXEEXT): $(nw_indent_OBJECTS) $(nw_indent_DEPENDENCIES) 
	@rm -f nw_indent$(EXEEXT)
	$(LINK) $(nw_indent_OBJECTS) $(nw_indent_LDADD) $(LIBS)
nw_labels$(EXEEXT): $(nw_labels_OBJECTS) $(nw_labels_DEPENDENCIES) 
	@rm -f nw_labels$(EXEEXT)
	$(LINK) $(nw_labels_OBJECTS) $(nw_labels_LDADD) $(LIBS)
nw_order$(EXEEXT): $(nw_order_OBJECTS) $(nw_order_DEPENDENCIES) 
	@rm -f nw_order$(EXEEXT)
	$(LINK) $(nw_order_OBJECTS) $(nw_order_LDADD) $(LIBS)
nw_prune$(EXEEXT): $(nw_prune_OBJECTS) $(nw_prune_DEPENDENCIES) 
	@rm -f nw_prune$(EXEEXT)
	$(LINK) $(nw_prune_OBJECTS) $(nw_prune_LDADD) $(LIBS)
nw_rename$(EXEEXT): $(nw_rename_OBJECTS) $(nw_rename_DEPENDENCIES) 
	@rm -f nw_rename$(EXEEXT)
	$(LINK) $(nw_rename_OBJECTS) $(nw_rename_LDADD) $(LIBS)
nw_reroot$(EXEEXT): $(nw_reroot_OBJECTS) $(nw_reroot_DEPENDENCIES) 
	@rm -f nw_reroot$(EXEEXT)
	$(LINK) $(nw_reroot_OBJECTS) $(nw_reroot_LDADD) $(LIBS)
nw_support$(EXEEXT): $(nw_support_OBJECTS) $(nw_support_DEPENDENCIES) 
	@rm -f nw_support$(EXEEXT)
	$(LINK) $(nw_support_OBJECTS) $(nw_support_LDADD) $(LIBS)
nw_topology$(EXEEXT): $(nw_topology_OBJECTS) $(nw_topology_DEPENDENCIES) 
	@rm -f nw_topology$(EXEEXT)
	$(LINK) $(nw_topology_OBJECTS) $(nw_topology_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/address_parser.Po
include ./$(DEPDIR)/address_scanner.Po
include ./$(DEPDIR)/canvas.Po
include ./$(DEPDIR)/concat.Po
include ./$(DEPDIR)/condense.Po
include ./$(DEPDIR)/display.Po
include ./$(DEPDIR)/distance.Po
include ./$(DEPDIR)/enode.Po
include ./$(DEPDIR)/hash.Po
include ./$(DEPDIR)/indent.Po
include ./$(DEPDIR)/indent_lex.Po
include ./$(DEPDIR)/labels.Po
include ./$(DEPDIR)/lca.Po
include ./$(DEPDIR)/link.Po
include ./$(DEPDIR)/list.Po
include ./$(DEPDIR)/newick_parser.Po
include ./$(DEPDIR)/newick_scanner.Po
include ./$(DEPDIR)/node_pos_alloc.Po
include ./$(DEPDIR)/node_set.Po
include ./$(DEPDIR)/nodemap.Po
include ./$(DEPDIR)/order.Po
include ./$(DEPDIR)/parser.Po
include ./$(DEPDIR)/prune.Po
include ./$(DEPDIR)/readline.Po
include ./$(DEPDIR)/redge.Po
include ./$(DEPDIR)/rename.Po
include ./$(DEPDIR)/reroot.Po
include ./$(DEPDIR)/rnode.Po
include ./$(DEPDIR)/rnode_iterator.Po
include ./$(DEPDIR)/simple_node_pos.Po
include ./$(DEPDIR)/subtree.Po
include ./$(DEPDIR)/support.Po
include ./$(DEPDIR)/svg_graph.Po
include ./$(DEPDIR)/text_graph.Po
include ./$(DEPDIR)/to_newick.Po
include ./$(DEPDIR)/topology.Po
include ./$(DEPDIR)/tree.Po
include ./$(DEPDIR)/tree_editor.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.l.c:
	$(am__skiplex) $(SHELL) $(YLWRAP) $< $(LEX_OUTPUT_ROOT).c $@ -- $(LEXCOMPILE)

.y.c:
	$(am__skipyacc) $(SHELL) $(YLWRAP) $< y.tab.c $@ y.tab.h $*.h y.output $*.output -- $(YACCCOMPILE)

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f address_parser.c
	-rm -f address_parser.h
	-rm -f address_scanner.c
	-rm -f indent_lex.c
	-rm -f newick_parser.c
	-rm -f newick_parser.h
	-rm -f newick_scanner.c
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-local mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-local ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS


newick_scanner.c: newick_scanner.l
	flex -onewick_scanner.c newick_scanner.l 

address_scanner.c: address_scanner.l
	flex -oaddress_scanner.c address_scanner.l 

# Removes automatically generated C code (Lex & YACC)
#
clean-local:
	$(RM) newick_scanner.c newick_parser.c newick_parser.h \
	address_scanner.c address_parser.c address_parser.h  \
	indent_lex.c
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
